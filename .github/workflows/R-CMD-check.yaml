on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: R-CMD-Check ${{ matrix.config.os }} (${{ matrix.config.r }} - ${{ matrix.config.rust-version }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', rust-version: 'stable-msvc', rust-target: 'x86_64-pc-windows-gnu', rtools-version: '45' }
          - {os: windows-latest, r: 'devel',   rust-version: 'stable-msvc', rust-target: 'x86_64-pc-windows-gnu', rtools-version: '45' }
          - {os: windows-latest, r: 'oldrel',  rust-version: 'stable-msvc', rust-target: 'x86_64-pc-windows-gnu', rtools-version: '44' }

          - {os: macOS-latest,   r: 'release', rust-version: 'stable' }

          - {os: ubuntu-latest,  r: 'release', rust-version: 'stable' }
          - {os: ubuntu-latest,  r: 'devel',   rust-version: 'stable' }
          - {os: ubuntu-latest,  r: 'oldrel',  rust-version: 'stable' }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      REXTENDR_SKIP_DEV_TESTS: TRUE # TODO: Remove this when extendr/libR-sys issue is resolved

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.config.rust-version }}
          targets: ${{ matrix.config.rust-target }}

      # Add rust-cache for faster builds
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ${{ matrix.config.os }}-${{ matrix.config.rust-version }}
          cache-on-failure: true

      # Add sccache for compilation caching
      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Configure sccache
        shell: pwsh
        run: |
          echo "SCCACHE_GHA_ENABLED=true" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RUSTC_WRAPPER=sccache" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - uses: baptiste0928/cargo-install@v3
        if: matrix.config.r == 'release'
        with:
          crate: cargo-license

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools-version }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 2
          extra-packages: rcmdcheck

      - uses: r-lib/actions/check-r-package@v2
        with:
          error-on: '"note"'

      # Print sccache stats at the end
      - name: Print sccache stats
        run: sccache --show-stats
